{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the FinTrack AI application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the User entity."
        },
        "email": {
          "type": "string",
          "description": "Email address of the user.",
          "format": "email"
        }
      },
      "required": [
        "id",
        "email"
      ]
    },
    "BankAccount": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "BankAccount",
      "type": "object",
      "description": "Represents a bank account associated with a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the BankAccount entity."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N BankAccount)"
        },
        "accountName": {
          "type": "string",
          "description": "Name of the bank account."
        },
        "accountNumber": {
          "type": "string",
          "description": "Account number of the bank account."
        },
        "bankName": {
          "type": "string",
          "description": "Name of the bank."
        }
      },
      "required": [
        "id",
        "userId",
        "accountName",
        "accountNumber",
        "bankName"
      ]
    },
    "Transaction": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Transaction",
      "type": "object",
      "description": "Represents a financial transaction.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Transaction entity."
        },
        "bankAccountId": {
          "type": "string",
          "description": "Reference to BankAccount. (Relationship: BankAccount 1:N Transaction)"
        },
        "date": {
          "type": "string",
          "description": "Date of the transaction.",
          "format": "date-time"
        },
        "description": {
          "type": "string",
          "description": "Description of the transaction."
        },
        "amount": {
          "type": "number",
          "description": "Amount of the transaction."
        },
        "categoryId": {
          "type": "string",
          "description": "Reference to Category. (Relationship: Category 1:N Transaction)"
        }
      },
      "required": [
        "id",
        "bankAccountId",
        "date",
        "description",
        "amount",
        "categoryId"
      ]
    },
    "Category": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Category",
      "type": "object",
      "description": "Represents a category for classifying transactions.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Category entity."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Category)"
        },
        "name": {
          "type": "string",
          "description": "Name of the category."
        },
        "description": {
          "type": "string",
          "description": "Description of the category."
        }
      },
      "required": [
        "id",
        "userId",
        "name",
        "description"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous",
      "google.com"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profile information. This path uses path-based ownership for user data.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user.  This is the `request.auth.uid`."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/bankAccounts/{bankAccountId}",
        "definition": {
          "entityName": "BankAccount",
          "schema": {
            "$ref": "#/backend/entities/BankAccount"
          },
          "description": "Stores bank account information for a specific user. Path-based ownership is implemented.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "bankAccountId",
              "description": "The unique identifier for the bank account."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/transactions/{transactionId}",
        "definition": {
          "entityName": "Transaction",
          "schema": {
            "$ref": "#/backend/entities/Transaction"
          },
          "description": "Stores transaction data associated with a specific bank account. Path-based ownership is implemented.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "bankAccountId",
              "description": "The unique identifier for the bank account."
            },
            {
              "name": "transactionId",
              "description": "The unique identifier for the transaction."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/categories/{categoryId}",
        "definition": {
          "entityName": "Category",
          "schema": {
            "$ref": "#/backend/entities/Category"
          },
          "description": "Stores categories created by a specific user. Path-based ownership is implemented.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "categoryId",
              "description": "The unique identifier for the category."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to provide a secure, scalable, and easily maintainable data model for the FinTrack AI application, adhering to the principles of Authorization Independence, Clarity of Intent, DBAC (Database-Based Access Control), and QAPs (Rules are not Filters). It leverages structural segregation by using dedicated collections for each entity type, and consistent access modeling via path-based ownership for user-related data. \n\nAuthorization Independence is achieved by associating each BankAccount, Transaction, and Category with the userId via hierarchical paths (`/users/{userId}/bankAccounts/{bankAccountId}`, `/users/{userId}/categories/{categoryId}`, and `/users/{userId}/bankAccounts/{bankAccountId}/transactions/{transactionId}`). This eliminates the need for `get()` calls in security rules, enabling atomic operations and improving debuggability.\n\nThe structure supports the required QAPs by ensuring that list operations can be secured effectively. Since all documents within a collection share the same security requirements (e.g., only the user can access their own bank accounts), rules can be written to allow listing only if `request.auth.uid == userId` without needing to filter based on document content."
  }
}
